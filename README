Perform analysis of (selected) JSF 1.1 JSP files and validate that
all EL expressions reference only existing managed beans and their
properties/action methods.

USAGE
See the main class net.jakubholy.jeeutils.jsfelcheck.JsfStaticAnalyzer
and perhaps try to run it from the command line (it prints usage info).

MORE INFO

See detailed description of how to use the tool at
http://theholyjava.wordpress.com/2011/06/22/validating-jsf-el-expressions-in-jsf-pages-with-static-jsfexpression-validator/

TODO
- add example JSF page
- test with various JSF projects
- better error msg for
    '#{bean.listProperty[0].elementProperty}': PropertyNotFoundException - Property 'elementProperty' not found on class net.jakubholy.jeeutils.jsfelcheck.validator.MockObjectOfUnknownType]; expression=#{bean.listProperty[0].elementProperty}, file=/mypage.jsp, tagLine=126]
 => make it clear the solution is st. like propertyTypeOverrides.put("bean.listProperty.*",  TheElementType.class);

...
- don't mock implementations of Map/Collection, instantiate them instead (eg ArrayList)
- consider parallelization (take ~30s for our 200 pages on my PC)
- better handling of includes:
    1) possibility to exclude pages from processing (the non-standalone ones)
    2) whenever dynamic jsp include encountered, switch to processing of that page, passing local variables in

- far future: migrate to JSF 1.2 (using ElResolver) and then JSF 2.0

DEVELOPEMET INTRO

Key classes
- JsfStaticAnalyzer - the main method, wires all together
- JsfElValidatingPageNodeListener - drives the validation based on JSP tags being processed
    and composes the failures/successes report
- ValidatingJsfElResolver - actual checks of JSF EL expressions

---
- net.jakubholy.jeeutils.jsfelcheck.expressionfinder.impl.jasper.PageNodeExpressionValidator.isMethodBinding(String) - distinguish value and method binding
