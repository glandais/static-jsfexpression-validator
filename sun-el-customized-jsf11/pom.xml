<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>jsfelcheck-parent</artifactId>
        <groupId>net.jakubholy.jeeutils.jsfelcheck</groupId>
        <version>0.9.10-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>sun-el-customized-jsf11</artifactId>
    <description>Modified Sun's jsf-impl for JSF 1.1 that evaluates all branches of an expression</description>

    <dependencies>

        <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>${javassist.version}</version>
            <scope>provided</scope> <!-- only needed at build-time -->
        </dependency>

        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.0</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <!-- 1. Phase process-sources: Unpack jasper-el to the target/dependency/ folder -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                        		<groupId>javax.faces</groupId>
                        		<artifactId>jsf-impl</artifactId>
                        		<version>1.1_02</version>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${jasperel.unpacked.directory}</outputDirectory>
                            <overWriteReleases>true</overWriteReleases>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- 2. Phase compile (implicit) - compile the bytecode manipulation code -->

            <!-- 3. Phase process-classes: do the bytecode magic -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <phase>process-classes</phase>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>net.jakubholy.jeeutils.jsfelcheck.jasperelcustomizer.instrumenter.JavassistTransformer</mainClass>
                    <arguments>
                        <argument>${jasperel.unpacked.directory}</argument>
                    </arguments>
                    <includePluginDependencies>true</includePluginDependencies>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.javassist</groupId>
                        <artifactId>javassist</artifactId>
                        <version>${javassist.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- 4. Phase test: tun the tests of the processed stuff -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.10</version>
                <configuration>
                    <additionalClasspathElements>
                        <additionalClasspathElement>${jasperel.unpacked.directory}</additionalClasspathElement>
                    </additionalClasspathElements>
                </configuration>
            </plugin>

            <!-- 5. Phase package: package the processed classes !from the directory whey they are, ignoring my own classes!! -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <classesDirectory>${jasperel.unpacked.directory}</classesDirectory>
                    <excludes>
                        <exclude>net/jakubholy/jeeutils/jsfelcheck/jasperelcustomizer/instrumenter/**</exclude>
                    </excludes>
                </configuration>
            </plugin>


        </plugins>
    </build>

    <properties>
        <jasperel.unpacked.directory>${project.build.outputDirectory}</jasperel.unpacked.directory>
    </properties>

</project>
