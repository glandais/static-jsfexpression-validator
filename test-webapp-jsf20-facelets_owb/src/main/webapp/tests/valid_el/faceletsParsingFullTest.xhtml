<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:c="http://java.sun.com/jsp/jstl/core"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:ui="http://java.sun.com/jsf/facelets">
<h:head>
    <title>Hello World</title>
    <style type="text/css">
      .section {
          border-left: 3px solid #999999;
          /*border-top: 1px solid #999999;*/
          margin: 3px;
          margin-bottom: 8px;
          padding: 2px;
      }
    </style>

    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.min.js"></script>
    <h:outputScript name="diQuery-collapsiblePanel.js" library="js" />
    <h:outputStylesheet name="diQuery-collapsiblePanel.css" library="css" />

    <script type="text/javascript">
        $(document).ready(function() {
            $(".section").collapsiblePanel();
        });
    </script>
</h:head>
<h:body>
    <h:outputStylesheet name="style.css" library="css"/>

    <div id="container" style="border-style: none">
        <h1>faceletsParsingFullTest</h1>
        <h:form id="mainForm">

            <div class="section" title="Basic elements">

                <p><h:outputText value="Example EL #{myActionBean.map.outputValue} within a literal"/></p>


                <p><!-- writable value binding -->
                <h:inputText id="input" value="#{myActionBean.map.inputValue}">
                    <f:attribute name="strangelyIgnoredAttr" value="#{myActionBean.map.attributeValue}" />
                </h:inputText></p>

                <p>
                    <h:commandButton value="Submit All" id="commandButton"
                                 action="#{myActionBean.doAction}"
                                 actionListener="#{myActionBean.doActionListening}">
                    <!-- Note: We cant't test binding="#{myActionBean.componentBinding}" w/o actually making the bean visible to JSF -->
                        <f:param name="dummyParam" value="#{myActionBean.map.fParamValue}" />
                        <f:setPropertyActionListener target="#{myActionBean.map.palTarget}" value="#{myActionBean.map.palValue}" />
                    </h:commandButton>
                </p>
            </div>

            <div class="section" title="Tables and repetition">

                <h3>h:dataTable</h3>
                <h:dataTable value="#{myActionBean.books}" var="book">
                    <h:column>
                        <f:facet name="header">Name</f:facet>
                        #{book.name}
                    </h:column>
                </h:dataTable>

                <h3>ui:repeat</h3>
                <ui:repeat value="#{myActionBean.books}" var="book" varStatus="status">
                    <p>#{book.name}</p>
                </ui:repeat>

            </div>

            <div class="section" title="Special stuff">
                <h3>Method bindings for validator, ...</h3>
                <p><h:inputText id="methodBindingsInput"
                        value="#{myActionBean.map.methodBindingsInputValue}"
                        validator="#{myActionBean.doValidating}"
                        valueChangeListener="#{myActionBean.doValueChangeListening}" />
                </p>

                <h3>f:converter, f:validator etc.</h3>
                <h:inputText id="inputWithConverterAndValidator" value="#{myActionBean.map.inputWithConverterAndValidator}">
                    <f:converter binding="#{myActionBean.converter}" />
                    <f:validator binding="#{myActionBean.validator}" />
                </h:inputText>

                <div class="section" title="An element with rendered=false; is the content rendered?">
                    <ui:fragment rendered="false">
                        <h:outputText value="#{myActionBean.map.iAmRendered}" />
                    </ui:fragment>
                </div>

                <div class="section" title="Tricky and multiple ELs (should detect each)">
                    #{myActionBean.map["trickyExprKey}"]} and #{myActionBean.map.trickyExprTwo}
                </div>
            </div>


            <hr />

            <div style="border: 1px solid #ffa07a; background-color: #d3d3d3;">
                <h2>All actions invoked on the myActionBean so far:</h2>
                <code>#{myActionBean.actionsInvokedSummary}</code>
            </div>
                


        </h:form>
    </div>

    <p style="font-size: small; font-style: italic; text-align: center">Thanks mostly to <a href="http://www.mkyong.com/tutorials/jsf-2-0-tutorials/">mkyong.com</a></p>
</h:body>
</html>
